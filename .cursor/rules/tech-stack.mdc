---
description:
globs:
alwaysApply: false
---
# Technology Stack

## Frontend Stack
- **Next.js 15** with TypeScript (strict mode) and App Router
- **React 19** (included with Next.js)
- **Tailwind CSS v4** with `@theme` directive configuration
- **shadcn/ui** for ALL UI components (mandatory usage)
- **Recharts** for stacked bar charts and data visualization
- **Tabler Icons** (@tabler/icons-react) for ALL icons
- **TanStack Table** for data tables

## Backend & Database
- **Supabase** (PostgreSQL + Auth + Real-time)
- **Prisma** as ORM for type-safe database operations
- **Row Level Security (RLS)** for data isolation
- **EU servers** for GDPR compliance

## Key Dependencies
```json
{
  "dependencies": {
    "next": "15.3.3",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "@supabase/supabase-js": "^2.50.0",
    "@supabase/auth-helpers-nextjs": "^0.10.0",
    "@prisma/client": "^6.9.0",
    "prisma": "^6.9.0",
    "@tabler/icons-react": "^3.34.0",
    "@tanstack/react-table": "^8.21.3",
    "recharts": "^2.15.3",
    "tailwindcss": "^4",
    "@shadcn/ui": "^0.0.4",
    "@radix-ui/react-avatar": "^1.1.10",
    "@radix-ui/react-dropdown-menu": "^2.1.15",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-tooltip": "^1.2.7",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "tailwind-merge": "^3.3.1"
  },
  "devDependencies": {
    "@tailwindcss/forms": "^0.5.10",
    "@tailwindcss/typography": "^0.5.16",
    "typescript": "^5"
  }
}
```

## Architecture Patterns
- **Next.js 15 App Router** with server components by default
- **Client components** for interactive features only
- **Custom hooks** for Supabase + Prisma operations
- **Server actions** for data mutations
- **Middleware** for authentication
- **Mobile-first responsive design**
- **TypeScript** for all files

## Mandatory UI Component Usage

### ALWAYS Use shadcn/ui Components:
- `Button` from `@/components/ui/button` - NEVER use plain `<button>`
- `Input` from `@/components/ui/input` - NEVER use plain `<input>`
- `Table`, `TableHeader`, `TableBody`, `TableRow`, `TableHead`, `TableCell` from `@/components/ui/table`
- `DropdownMenu` family from `@/components/ui/dropdown-menu`
- `Card`, `CardHeader`, `CardTitle`, `CardContent` from `@/components/ui/card`
- `Avatar`, `AvatarImage`, `AvatarFallback` from `@/components/ui/avatar`
- `Badge` from `@/components/ui/badge`
- `Separator` from `@/components/ui/separator`
- `Skeleton` from `@/components/ui/skeleton`
- `Sheet` family from `@/components/ui/sheet`
- `Sidebar` family from `@/components/ui/sidebar`
- `Tooltip` family from `@/components/ui/tooltip`

### ALWAYS Use Tabler Icons:
```typescript
// Correct icon usage
import { IconPlus, IconTrash, IconEdit, IconFilter } from '@tabler/icons-react';

// In components
<IconPlus className="h-4 w-4" />
<Button className="gap-1">
  <IconPlus className="h-3.5 w-3.5" />
  Add Item
</Button>
```

## Tailwind CSS v4 Configuration

### CSS-Based Configuration (app/globals.css):
```css
@import "tailwindcss";

@theme {
  --radius: 0.65rem;
  --color-primary: var(--primary);
  --color-secondary: var(--secondary);
  /* All theme config in CSS */
}
```

### JavaScript Config (tailwind.config.js):
```javascript
// Only plugins in JS config for v4
import forms from '@tailwindcss/forms';
import typography from '@tailwindcss/typography';

const config = {
  plugins: [forms, typography],
};

export default config;
```

## File Structure (Next.js 15 App Router)
```
├── app/                    # App Router directory
│   ├── globals.css        # Global styles + Tailwind v4 @theme
│   ├── layout.tsx         # Root layout
│   ├── page.tsx           # Home page
│   ├── (dashboard)/       # Route groups
│   ├── (root)/           # Route groups
│   ├── actions/          # Server actions
│   ├── api/              # API routes
│   └── auth/             # Authentication routes
├── components/           # Reusable UI components
│   ├── ui/              # shadcn/ui components (mandatory)
│   ├── dashboard/       # Feature-specific components
│   └── root/            # Root layout components
├── lib/                 # Utility functions
├── hooks/               # Custom hooks
├── prisma/              # Prisma schema and migrations
└── middleware.ts        # Next.js middleware for auth
```

## Next.js 15 Specific Features
- **Server Components** by default for better performance
- **Streaming** for improved loading states
- **Server Actions** for form submissions and mutations
- **Middleware** for authentication and redirects
- **Route Groups** for organizing related routes
- **Parallel Routes** for complex layouts
- **App Router** file-based routing system
