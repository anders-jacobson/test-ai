{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/andogpp/Documents/dev/Chas/11-examensarbete/test-ai/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client';\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: PrismaClient | undefined;\n};\n\nexport const prisma = globalForPrisma.prisma ?? new PrismaClient();\n\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,kBAAkB;AAIjB,MAAM,SAAS,gBAAgB,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY;AAEhE,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["file:///Users/andogpp/Documents/dev/Chas/11-examensarbete/test-ai/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM;AACN,MAAM;AAEC,MAAM,WAAW,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EAAE,aAAa","debugId":null}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":["file:///Users/andogpp/Documents/dev/Chas/11-examensarbete/test-ai/app/actions/registerUser.ts"],"sourcesContent":["'use server';\nimport { prisma } from '@/lib/prisma';\nimport { supabase } from '@/lib/supabase';\nimport bcrypt from 'bcrypt';\n\nexport async function registerUser(formData: FormData) {\n  const email = formData.get('email') as string;\n  const password = formData.get('password') as string;\n  const cooperative = formData.get('cooperative') as string;\n\n  if (!email || !password || !cooperative) {\n    return { error: 'All fields are required.' };\n  }\n\n  if (password.length < 8) {\n    return { error: 'Password must be at least 8 characters.' };\n  }\n\n  try {\n    // Hash the password\n    await bcrypt.hash(password, 10); // Not used, but kept for future extensibility\n\n    // Register user with Supabase Auth\n    const { error } = await supabase.auth.signUp({\n      email,\n      password,\n    });\n    if (error) {\n      // If Supabase returns a user exists error, show a friendly message\n      if (error.message && error.message.toLowerCase().includes('user already registered')) {\n        return { error: 'A user with this email already exists.' };\n      }\n      return { error: error.message };\n    }\n\n    // Create user profile in the database\n    await prisma.profile.create({\n      data: {\n        email,\n        cooperative,\n      },\n    });\n\n    return { success: true };\n  } catch (err) {\n    // Prisma unique constraint error\n    if (\n      err instanceof Error &&\n      err.message &&\n      err.message.toLowerCase().includes('unique constraint failed') &&\n      err.message.toLowerCase().includes('email')\n    ) {\n      return { error: 'A user with this email already exists.' };\n    }\n    if (err instanceof Error) {\n      return { error: err.message };\n    }\n    return { error: 'Registration failed.' };\n  }\n}\n"],"names":[],"mappings":";;;;;AACA;AACA;AACA;;;;;;;AAEO,eAAe,aAAa,QAAkB;IACnD,MAAM,QAAQ,SAAS,GAAG,CAAC;IAC3B,MAAM,WAAW,SAAS,GAAG,CAAC;IAC9B,MAAM,cAAc,SAAS,GAAG,CAAC;IAEjC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,aAAa;QACvC,OAAO;YAAE,OAAO;QAA2B;IAC7C;IAEA,IAAI,SAAS,MAAM,GAAG,GAAG;QACvB,OAAO;YAAE,OAAO;QAA0C;IAC5D;IAEA,IAAI;QACF,oBAAoB;QACpB,MAAM,qGAAA,CAAA,UAAM,CAAC,IAAI,CAAC,UAAU,KAAK,8CAA8C;QAE/E,mCAAmC;QACnC,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,+GAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;YAC3C;YACA;QACF;QACA,IAAI,OAAO;YACT,mEAAmE;YACnE,IAAI,MAAM,OAAO,IAAI,MAAM,OAAO,CAAC,WAAW,GAAG,QAAQ,CAAC,4BAA4B;gBACpF,OAAO;oBAAE,OAAO;gBAAyC;YAC3D;YACA,OAAO;gBAAE,OAAO,MAAM,OAAO;YAAC;QAChC;QAEA,sCAAsC;QACtC,MAAM,6GAAA,CAAA,SAAM,CAAC,OAAO,CAAC,MAAM,CAAC;YAC1B,MAAM;gBACJ;gBACA;YACF;QACF;QAEA,OAAO;YAAE,SAAS;QAAK;IACzB,EAAE,OAAO,KAAK;QACZ,iCAAiC;QACjC,IACE,eAAe,SACf,IAAI,OAAO,IACX,IAAI,OAAO,CAAC,WAAW,GAAG,QAAQ,CAAC,+BACnC,IAAI,OAAO,CAAC,WAAW,GAAG,QAAQ,CAAC,UACnC;YACA,OAAO;gBAAE,OAAO;YAAyC;QAC3D;QACA,IAAI,eAAe,OAAO;YACxB,OAAO;gBAAE,OAAO,IAAI,OAAO;YAAC;QAC9B;QACA,OAAO;YAAE,OAAO;QAAuB;IACzC;AACF;;;IAtDsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":["file:///Users/andogpp/Documents/dev/Chas/11-examensarbete/test-ai/.next-internal/server/app/auth/register/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {registerUser as '40b134fa22cca53f8a59d4fc647f12ee5273f89f6b'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 268, "column": 0}, "map": {"version":3,"sources":["file:///Users/andogpp/Documents/dev/Chas/11-examensarbete/test-ai/app/auth/register/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/auth/register/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/auth/register/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8R,GAC3T,4DACA","debugId":null}},
    {"offset": {"line": 282, "column": 0}, "map": {"version":3,"sources":["file:///Users/andogpp/Documents/dev/Chas/11-examensarbete/test-ai/app/auth/register/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/auth/register/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/auth/register/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0Q,GACvS,wCACA","debugId":null}},
    {"offset": {"line": 296, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}