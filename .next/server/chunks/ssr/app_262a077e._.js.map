{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/andogpp/Documents/dev/Chas/11-examensarbete/test-ai/app/actions/registerUser.ts"],"sourcesContent":["'use server';\nimport { prisma } from '@/lib/prisma';\nimport { supabase } from '@/lib/supabase';\nimport bcrypt from 'bcrypt';\n\nexport async function registerUser(formData: FormData) {\n  const email = formData.get('email') as string;\n  const password = formData.get('password') as string;\n  const cooperative = formData.get('cooperative') as string;\n\n  if (!email || !password || !cooperative) {\n    return { error: 'All fields are required.' };\n  }\n\n  if (password.length < 8) {\n    return { error: 'Password must be at least 8 characters.' };\n  }\n\n  try {\n    // Hash the password\n    await bcrypt.hash(password, 10); // Not used, but kept for future extensibility\n\n    // Register user with Supabase Auth\n    const { error } = await supabase.auth.signUp({\n      email,\n      password,\n    });\n    if (error) {\n      // If Supabase returns a user exists error, show a friendly message\n      if (error.message && error.message.toLowerCase().includes('user already registered')) {\n        return { error: 'A user with this email already exists.' };\n      }\n      return { error: error.message };\n    }\n\n    // Create user in the database\n    await prisma.user.create({\n      data: {\n        email,\n        cooperative,\n      },\n    });\n\n    return { success: true };\n  } catch (err) {\n    // Prisma unique constraint error\n    if (\n      err instanceof Error &&\n      err.message &&\n      err.message.toLowerCase().includes('unique constraint failed') &&\n      err.message.toLowerCase().includes('email')\n    ) {\n      return { error: 'A user with this email already exists.' };\n    }\n    if (err instanceof Error) {\n      return { error: err.message };\n    }\n    return { error: 'Registration failed.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAKsB,eAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":["file:///Users/andogpp/Documents/dev/Chas/11-examensarbete/test-ai/app/auth/register/page.tsx"],"sourcesContent":["'use client';\n\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport { useState, useTransition } from 'react';\nimport { registerUser } from '@/app/actions/registerUser';\n\nexport default function RegisterPage() {\n  const [message, setMessage] = useState<string | null>(null);\n  const [success, setSuccess] = useState(false);\n  const [isPending, startTransition] = useTransition();\n\n  async function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n    setMessage(null);\n    setSuccess(false);\n    const formData = new FormData(event.currentTarget);\n    startTransition(async () => {\n      const result = await registerUser(formData);\n      if (result?.error) {\n        setMessage(result.error);\n        setSuccess(false);\n      } else if (result?.success) {\n        setMessage('Registration successful! Please check your email to confirm your account.');\n        setSuccess(true);\n      }\n    });\n  }\n\n  return (\n    <div className=\"grid min-h-svh lg:grid-cols-2\">\n      <div className=\"flex flex-col gap-4 p-6 md:p-10\">\n        <div className=\"flex flex-1 items-center justify-center\">\n          <div className=\"w-full max-w-xs space-y-6\">\n            <span className=\"text-2xl font-bold mb-6 block\">Register Your Account</span>\n            {/* Only show Google sign up if not successful */}\n            {!success && (\n              <button\n                type=\"button\"\n                className=\"google-btn w-full flex items-center justify-center gap-2 rounded-md border border-border bg-primary/90 px-4 py-2 text-primary-foreground font-medium shadow transition duration-200\"\n              >\n                <svg\n                  width=\"20\"\n                  height=\"20\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <g clipPath=\"url(#clip0_993_156)\">\n                    <path\n                      d=\"M19.8052 10.2309C19.8052 9.5508 19.7491 8.86727 19.629 8.19824H10.2V12.0491H15.6261C15.3982 13.2727 14.6521 14.3364 13.6011 15.0364V17.0364H16.6011C18.4011 15.3818 19.8052 13.0364 19.8052 10.2309Z\"\n                      fill=\"#4285F4\"\n                    />\n                    <path\n                      d=\"M10.2 20C12.7 20 14.8011 19.1818 16.6011 17.0364L13.6011 15.0364C12.6011 15.7364 11.4011 16.1818 10.2 16.1818C7.80114 16.1818 5.80114 14.5091 5.10114 12.3273H2.00114V14.3818C3.80114 17.5091 6.80114 20 10.2 20Z\"\n                      fill=\"#34A853\"\n                    />\n                    <path\n                      d=\"M5.10114 12.3273C4.80114 11.5273 4.60114 10.6909 4.60114 9.81818C4.60114 8.94545 4.80114 8.10909 5.10114 7.30909V5.25455H2.00114C1.40114 6.45455 1.00114 7.78182 1.00114 9.18182C1.00114 10.5818 1.40114 11.9091 2.00114 13.1091L5.10114 12.3273Z\"\n                      fill=\"#FBBC05\"\n                    />\n                    <path\n                      d=\"M10.2 3.81818C11.5011 3.81818 12.7011 4.27273 13.6011 5.12727L16.6011 2.12727C14.8011 0.218182 12.7 0 10.2 0C6.80114 0 3.80114 2.49091 2.00114 5.25455L5.10114 7.30909C5.80114 5.12727 7.80114 3.81818 10.2 3.81818Z\"\n                      fill=\"#EA4335\"\n                    />\n                  </g>\n                  <defs>\n                    <clipPath id=\"clip0_993_156\">\n                      <rect width=\"20\" height=\"20\" fill=\"white\" />\n                    </clipPath>\n                  </defs>\n                </svg>\n                Sign up with Google\n              </button>\n            )}\n            {/* Only show divider if not successful */}\n            {!success && (\n              <div className=\"flex items-center gap-2\">\n                <div className=\"h-px flex-1 bg-muted\" />\n                <span className=\"text-muted-foreground text-xs\">or sign up with email</span>\n                <div className=\"h-px flex-1 bg-muted\" />\n              </div>\n            )}\n            {success ? (\n              <div className=\"text-green-600 text-center\">{message}</div>\n            ) : (\n              <form className=\"space-y-4\" onSubmit={handleSubmit}>\n                <div>\n                  <label htmlFor=\"email\" className=\"block text-sm font-medium mb-1\">\n                    Email\n                  </label>\n                  <input\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    autoComplete=\"email\"\n                    required\n                    className=\"block w-full rounded-md border border-border bg-background px-3 py-2 text-base focus:outline-none focus:ring-2 focus:ring-ring\"\n                    placeholder=\"Enter your email\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"password\" className=\"block text-sm font-medium mb-1\">\n                    Password\n                  </label>\n                  <input\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    autoComplete=\"new-password\"\n                    required\n                    className=\"block w-full rounded-md border border-border bg-background px-3 py-2 text-base focus:outline-none focus:ring-2 focus:ring-ring\"\n                    placeholder=\"Choose a password\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"cooperative\" className=\"block text-sm font-medium mb-1\">\n                    Cooperative Name\n                  </label>\n                  <input\n                    id=\"cooperative\"\n                    name=\"cooperative\"\n                    type=\"text\"\n                    required\n                    className=\"block w-full rounded-md border border-border bg-background px-3 py-2 text-base focus:outline-none focus:ring-2 focus:ring-ring\"\n                    placeholder=\"Your cooperative's name\"\n                  />\n                </div>\n                {message && (\n                  <div className={success ? 'text-green-600 text-sm' : 'text-red-600 text-sm'}>\n                    {message}\n                  </div>\n                )}\n                <button\n                  type=\"submit\"\n                  className=\"google-btn w-full rounded-md bg-primary px-4 py-2 text-primary-foreground font-medium shadow transition duration-200\"\n                  disabled={isPending}\n                >\n                  {isPending ? 'Registering...' : 'Register'}\n                </button>\n              </form>\n            )}\n            {!success && (\n              <div className=\"text-center text-sm text-muted-foreground\">\n                Already have an account?{' '}\n                <Link href=\"/auth/login\" className=\"underline\">\n                  Log in\n                </Link>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n      <div className=\"bg-muted relative hidden lg:block\">\n        <Image\n          src=\"/rasheeque-ahnaf-piash-0nodNW_qR6s-unsplash.jpg\"\n          alt=\"Image\"\n          fill\n          className=\"absolute inset-0 h-full w-full object-cover dark:brightness-[0.2] dark:grayscale\"\n          priority\n        />\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}