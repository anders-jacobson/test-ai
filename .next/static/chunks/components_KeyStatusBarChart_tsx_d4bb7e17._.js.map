{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/andogpp/Documents/dev/Chas/11-examensarbete/test-ai/components/KeyStatusBarChart.tsx"],"sourcesContent":["'use client';\nimport React from 'react';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from 'recharts';\n\n// Mock data: one bar per key type, stacked by status\nconst data = [\n  {\n    keyType: 'Laundry',\n    Available: 20,\n    InUse: 8,\n    Lost: 2,\n  },\n  {\n    keyType: 'Trash',\n    Available: 25,\n    InUse: 4,\n    Lost: 1,\n  },\n  {\n    keyType: 'Master',\n    Available: 1,\n    InUse: 1,\n    Lost: 1,\n  },\n];\n\nconst statusBars = [\n  { key: 'Available', color: 'var(--chart-1)', name: 'Available' },\n  { key: 'InUse', color: 'var(--chart-2)', name: 'In Use' },\n  { key: 'Lost', color: 'var(--chart-3)', name: 'Lost' },\n];\n\nexport default function KeyStatusBarChart() {\n  return (\n    <ResponsiveContainer width=\"100%\" height={220}>\n      <BarChart data={data} margin={{ top: 16, right: 24, left: 0, bottom: 0 }}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"keyType\" />\n        <YAxis allowDecimals={false} />\n        <Tooltip />\n        <Legend />\n        {statusBars.map((bar) => (\n          <Bar key={bar.key} dataKey={bar.key} stackId=\"a\" fill={bar.color} name={bar.name} />\n        ))}\n      </BarChart>\n    </ResponsiveContainer>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;;;AAaA,qDAAqD;AACrD,MAAM,OAAO;IACX;QACE,SAAS;QACT,WAAW;QACX,OAAO;QACP,MAAM;IACR;IACA;QACE,SAAS;QACT,WAAW;QACX,OAAO;QACP,MAAM;IACR;IACA;QACE,SAAS;QACT,WAAW;QACX,OAAO;QACP,MAAM;IACR;CACD;AAED,MAAM,aAAa;IACjB;QAAE,KAAK;QAAa,OAAO;QAAkB,MAAM;IAAY;IAC/D;QAAE,KAAK;QAAS,OAAO;QAAkB,MAAM;IAAS;IACxD;QAAE,KAAK;QAAQ,OAAO;QAAkB,MAAM;IAAO;CACtD;AAEc,SAAS;IACtB,qBACE,6LAAC,sKAAA,CAAA,sBAAmB;QAAC,OAAM;QAAO,QAAQ;kBACxC,cAAA,6LAAC,uJAAA,CAAA,WAAQ;YAAC,MAAM;YAAM,QAAQ;gBAAE,KAAK;gBAAI,OAAO;gBAAI,MAAM;gBAAG,QAAQ;YAAE;;8BACrE,6LAAC,gKAAA,CAAA,gBAAa;oBAAC,iBAAgB;;;;;;8BAC/B,6LAAC,wJAAA,CAAA,QAAK;oBAAC,SAAQ;;;;;;8BACf,6LAAC,wJAAA,CAAA,QAAK;oBAAC,eAAe;;;;;;8BACtB,6LAAC,0JAAA,CAAA,UAAO;;;;;8BACR,6LAAC,yJAAA,CAAA,SAAM;;;;;gBACN,WAAW,GAAG,CAAC,CAAC,oBACf,6LAAC,sJAAA,CAAA,MAAG;wBAAe,SAAS,IAAI,GAAG;wBAAE,SAAQ;wBAAI,MAAM,IAAI,KAAK;wBAAE,MAAM,IAAI,IAAI;uBAAtE,IAAI,GAAG;;;;;;;;;;;;;;;;AAK3B;KAfwB","debugId":null}}]
}